[
  {
    "project_name": "LEKR Services",
    "image": "/img/ekko2.jpeg",
    "type": ["personal"],
    "project_description": "LEKR Services product offers business tools and automation solutions for small to medium-sized businesses. The tech stack used in the product includes AWS Serverless Lambda, MongoDB, React Web App, and React Native Mobile App.\n\nThe product comprises custom authentication features that include OTP verification and token management, as well as functionalities for generating quotes, invoices, and lead generation. You can view the product at lekr.co",
    "project_link": "https://lekr.co"
  },
  {
    "project_name": "ekko",
    "image": "/img/ekko2.jpeg",
    "type": ["featured", "professional"],
    "project_description": "ekko is a FinTech company that empowers businesses and consumers worldwide to combat climate change. ekko's innovative solution won the Best Green Initiative in Payments award in 2022 and Best Achievement in Sustainability 2023. With ekko's debit card, users earn points for every swipe that goes towards collecting plastic from oceans and planting trees. Users can also view their carbon emission expenditure and access a marketplace of green merchants partnered with EKKO.\n\nAs a key member of the backend and DevOps team, my focus was on solution design and the development of new features. One notable contribution was the implementation of a waitlisting system that enabled us to send and track tens of thousands of emails per week and retrieve analytical data on signups. Additionally, I worked on transactions through PPS and integrated with Mastercard to collect carbon emission data per transaction item and provide data analysis on the front end.\n\nThe tech stack for EKKO includes React Native with TypeScript for the front end, a serverless TypeScript project with a GraphQL API connected to a MongoDB database for the backend, and Terraform for infrastructure management on AWS.\n\nOverall, I contributed to the successful implementation of key features, resulting in EKKO's award-winning solution and positive impact on the fight against climate change.",
    "project_link": "https://joinekko.earth/"
  },
  {
    "project_name": "Bloom",
    "image": "/img/bloom.jpeg",
    "type": ["featured", "professional"],
    "project_description": "Bloom Support is a comprehensive care provision software that puts users in control of their care homes. The app's versatile note-taking system allows care providers to easily track patient activity throughout the day, such as medication schedules and meal times. Additionally, the platform includes a management web app for completing existing app functionality and aggregating data. Bloom Support is currently used by care homes in the UK and South Africa.\n\nAs a full-stack engineer and team lead for Bloom Support, I primarily focused on the web app and backend functionality. One of the standout features I contributed to was the software's sophisticated data aggregation, filtering, and viewing system. Additionally, I helped develop an auditing system that allows users to track changes in data and management to approve changes.\n\nThe tech stack for Bloom Support included React Native for the app frontend, Python Django for the backend connected to a MySQL database, and is hosted on an Elastic Beanstalk instance on AWS and connected to an RDS MySQL database.\n\nOverall, my contributions helped bring a high level of functionality and data management to Bloom Support, contributing to its success as a widely-used care provision software solution.",
    "project_link": "https://www.bloomsupport.co/"
  },
  {
    "project_name": "EMSOL",
    "image": "/img/emsol.jpeg",
    "type": ["featured", "professional"],
    "project_description": "At EMSOL, I worked as a full-stack engineer, contributing to the company's mission of improving urban air quality and reducing air and noise pollution on various sites. To achieve this, EMSOL installs air and noise quality monitors and camera technology at facilities to collect data 24/7, which is then sent to the EMSOL platform for analysis.\n\nAs part of my role, I was responsible for developing the data aggregation and processing systems that would take the raw sensor data and present it in user-friendly formats such as tables, graphs, and charts. I also created data generation forms to generate CVS files for data analysis.\n\nThe tech stack for EMSOL included a Node.js backend and a React frontend, with various IoT services on AWS to communicate and review the data from the sensors. Additionally, I worked on implementing Docker containers to isolate the sensors' logic and remotely access and debug them as needed.\n\nOverall, working on EMSOL provided me with the opportunity to work on a meaningful project with a clear goal of improving the environment, while also giving me the chance to work with cutting-edge technology and hone my full-stack development skills.",
    "project_link": "https://emsol.io/"
  },
  {
    "project_name": "Personal Portfolio Website",
    "image": "/img/emsol.jpeg",
    "type": ["personal"],
    "project_description": "My current personal portfolio website created using React and hosted on AWS. The website showcases my skills, experience, and projects, and provides visitors with a way to get in touch with me. And you're on it right now!\n\nThe code can be viewed on github with the link down below!",
    "project_link": "https://github.com/Almano98/personal-portfolio"
  },
  {
    "project_name": "Othello AI",
    "image": "/img/emsol.jpeg",
    "type": ["personal"],
    "project_description": "an Othello board game AI program that incorporates several advanced techniques to choose the best move possible. The program utilizes a minimax algorithm with alpha-beta pruning, as well as MPI parallelization for optimal performance. Additionally, the program makes use of iterative deepening and an advanced evaluation function to improve decision-making. With these advanced techniques, the Othello AI program can make more informed decisions and provide a challenging opponent for players.\n\nThe code can be viewed on github with the link down below!",
    "project_link": "https://github.com/Almano98/Othello-AI"
  },
  {
    "project_name": "Task Manager API",
    "image": "/img/emsol.jpeg",
    "type": ["personal"],
    "project_description": "Task management API created using Node.js and connected to a MongoDB database. The project includes full custom authorization, and makes use of jwtTokens to keep track of user sessions as well as authentication to ensure that tasks are only able to be accessed by the user that created them.\n\nCRUD operations are fully available for both the task and user items.\n\nThe code can be viewed on github with the link down below!",
    "project_link": "https://github.com/Almano98/task-manager-api"
  },
  {
    "project_name": "Online Chat Application",
    "image": "/img/emsol.jpeg",
    "type": ["personal"],
    "project_description": "This is a simple chat interface that is created using Node.js that allows users to join a room with a chosen username and communicate with others in that room. You are able to send various messages as well as your current location to the chat room. Basic auth was implemented for the users and rooms.\n\nThe program makes use of socket.io and express to handle user interaction with the application and between users.\n\nThe code can be viewed on github with the link down below!",
    "project_link": "https://github.com/Almano98/Chat-Application"
  }
]
